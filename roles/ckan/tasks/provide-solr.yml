- name: Install Dependencies
  ansible.builtin.apt:
    name: openjdk-11-jdk-headless
    state: latest

- name: make sure tomcat and Solr are not installed via apt
  ansible.builtin.apt:
    name:
      - tomcat9
      - solr-tomcat
    state: absent

- name: Is the correct version of Solr already installed?
  ansible.builtin.shell: "/opt/solr/bin/solr --version"
  register: solr_vd
  ignore_errors: true

- name: Remove Solr if it does not match the specified version
  ansible.builtin.shell:
    cmd: |
      systemctl stop solr
      rm -rf /var/solr
      rm -rf /opt/solr-*
      rm -rf /opt/solr
      rm -rf /etc/init.d/solr
      rm -rf /etc/default/solr.in.sh
      rm -rf /var/lib/solr
      rm -rf /etc/solr
      rm -rf /etc/systemd/system/solr.service.d
      deluser --remove-home solr
      deluser --group solr
      update-rc.d -f solr remove
  when: solr_vd.rc == 0 and SOLR_VERSION not in solr_vd.stdout

- name: Ensure correct Solr version is installed
  block:
    - name: Create install directory
      ansible.builtin.file:
        path: "{{ ANSIBLE_DOWNLOAD_DIR }}"
        state: directory

    - name: Download Solr
      ansible.builtin.get_url:
        url: "https://dlcdn.apache.org/solr/solr/{{ SOLR_VERSION }}/solr-{{ SOLR_VERSION }}.tgz"
        dest: "{{ ANSIBLE_DOWNLOAD_DIR }}solr-{{ SOLR_VERSION }}.tgz"
        checksum: sha512:{{ SOLR_INSTALLER_SHA512 }}
        mode: '0400'

    - name: Extract the installer script
      ansible.builtin.shell:
        chdir: "{{ ANSIBLE_DOWNLOAD_DIR }}"
        cmd: "tar xzf {{ ANSIBLE_DOWNLOAD_DIR }}solr-{{ SOLR_VERSION }}.tgz solr-{{ SOLR_VERSION }}/bin/install_solr_service.sh --strip-components=2"

    - name: Install Solr
      ansible.builtin.shell:
        chdir: "{{ ANSIBLE_DOWNLOAD_DIR }}"
        cmd: "bash ./install_solr_service.sh solr-{{ SOLR_VERSION }}.tgz"

    - name: Make sure Solr started
      ansible.builtin.service:
        name: solr
        state: started
        enabled: yes

    - name: Create a new core for Solr
      become: true
      become_user: solr
      ansible.builtin.shell:
        cmd: /opt/solr/bin/solr create -c ckan

    - name: Replace Solr schema with CKAN's
      become: true
      become_user: solr
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/ckan/ckan/dev-v{{ CKAN_MINOR_VERSION }}/ckan/config/solr/schema.xml"
        dest: "/var/solr/data/ckan/conf/managed-schema.xml"

  when: solr_vd.rc != 0 or SOLR_VERSION not in solr_vd.stdout

- name: Tune down solr logging
  block:
    - name: Make sure solr logging level is "warn"
      ansible.builtin.replace:
        path: /var/solr/log4j2.xml
        regexp: '(.*)level="info"(.*)'
        replace: '\1level="warn"\2'

    - name: disable requests logging
      # The problem was that solr log files became ~8GB in size
      # https://solr.apache.org/guide/solr/latest/deployment-guide/configuring-logging.html#request-logging
      ansible.builtin.lineinfile:
        path: /etc/default/solr.in.sh
        insertafter: '#SOLR_REQUESTLOG_ENABLED=true'
        line: "SOLR_REQUESTLOG_ENABLED=false"

- name: Override Solr systemd
  block:
    - name: Create override directory for Solr systemd
      ansible.builtin.file:
        owner: root
        group: root
        mode: 0755
        path: /etc/systemd/system/solr.service.d
        state: directory
    - name: deploy systemd override for Solr
      ansible.builtin.template:
        src: systemd_solr-override.conf.j2
        dest: /etc/systemd/system/solr.service.d/override.conf
        group: root
        owner: root
        mode: 0644
    - name: Tell systemd to reread configs
      ansible.builtin.systemd:
        daemon_reload: true

- name: Restart Solr
  ansible.builtin.service:
    name: solr
    state: restarted

- name: Make sure Solr is reachable
  ansible.builtin.uri:
    url: http://localhost:8983/solr
    status_code: 200
    return_content: true
  register: this
  failed_when: "'Solr Admin' not in this.content"
