CKAN_ENVIRONMENT_DIRECTORY: "/usr/lib/ckan/default"
CKAN_ENVIRONMENT_ACTIVATE: "{{ CKAN_ENVIRONMENT_DIRECTORY }}/bin/activate"
CKAN_ENV_SITE_PACKAGES_DIRECTORY: "/usr/lib/ckan/default/lib/python3.12/site-packages"

FULLY_QUALIFIED_DOMAIN_NAME: "{{ inventory_hostname }}"

CKAN_INI: "/etc/ckan/default/ckan.ini"
CKAN_INI_STORAGE_PATH: "/data"
CKAN_INI_SITE_TITLE: "DCOR Base"
CKAN_INI_SOLR_URL: "http://localhost:8983/solr/ckan"
CKAN_INI_AUTH_CREATE_USER_VIA_API: false
CKAN_INI_AUTH_CREATE_USER_VIA_WEB: false
CKAN_INI_DCOR_SCHEMAS_ALLOW_CONTENT_LISTING_FOR_ANON: false
CKAN_INI_DCOR_SCHEMAS_ALLOW_PUBLIC_DATASETS: false

# Email configuration
EMAIL_SMTP_SERVER: ""
EMAIL_SMTP_STARTTLS: true
EMAIL_SMTP_TLS: true
EMAIL_SMTP_USER: ""
EMAIL_SMTP_PASSWORD: ""
EMAIL_SMTP_MAIL_FROM: "noreply-dcor@{{ FULLY_QUALIFIED_DOMAIN_NAME }}"
EMAIL_SMTP_REPLY_TO: ""
CKAN_INI_EMAIL_TO: "{{ MAINTAINER_EMAIL }}"
CKAN_INI_ERROR_EMAIL_FROM: "error-dcor@{{ FULLY_QUALIFIED_DOMAIN_NAME }}"

CACHE_DIR: "/cache"
DCOR_DEVELOP: false
DCOR_USE_LOCAL_MINIO: false
# We set SSL verification to True, even though this won't work with MinIO,
# because it is a sane default.
DCOR_HTTPS_ENABLED: true
# Path to ckanext.dcor_schemas installation in regular install
DCOR_SCHEMAS_PATH_DEFAULT: "{{ CKAN_ENV_SITE_PACKAGES_DIRECTORY }}/ckanext/dcor_schemas"
# Path to ckanext.dcor_schemas installation when DCOR_DEVELOP == true
DCOR_SCHEMAS_PATH_DEVELOP: "/dcor-repos/ckanext-dcor_schemas/ckanext/dcor_schemas"
# Whether to perform encrypted database backups and upload them to S3
DCOR_ENCRYPTED_BACKUPS_ENABLED: true
# Color of web favicon
DCOR_FAVICON_COLOR: "#a47f45"

# Whether to import figshare data
DCOR_FIGSHARE_IMPORT: false

# Object storage access
DCOR_S3_ENDPOINT_URL: "http://{{ FULLY_QUALIFIED_DOMAIN_NAME }}:9000"
DCOR_S3_ACCESS_KEY_ID: "dcor-access"
# The S3 bucket name stub is a unique prefix to the buckets created by DCOR.
# There might be multiple DCOR instances on one S3 instance, so it should be
# sufficiently unique.
DCOR_S3_BUCKET_NAME_STUB: "circle-{{ inventory_hostname }}"
# If we are using DCOR_USE_LOCAL_MINIO:
MINIO_ROOT_USER: "minioadmin"
MINIO_VOLUMES: "/srv/minio"

POSTGRESQL_CKAN_HOST: "localhost"
POSTGRESQL_CKAN_USER: "ckan_default"
POSTGRESQL_CKAN_DATABASE: "ckan_default"

# https://dl.min.io/server/minio/release/linux-amd64/archive/
MINIO_SERVER_VERSION: "20250422221226.0.0"
MINIO_SERVER_DEB_NAME: "minio_{{ MINIO_SERVER_VERSION }}_amd64.deb"
MINIO_SERVER_DEB_SHA256: "d8898351831761e083e7ba6b74ea7ec478b9a6680794fe92e5e838145341c9c5"

# https://dl.min.io/client/mc/release/linux-amd64/archive
MINIO_CLIENT_VERSION: "20250416181326.0.0"
MINIO_CLIENT_DEB_NAME: "mcli_{{ MINIO_CLIENT_VERSION }}_amd64.deb"
MINIO_CLIENT_DEB_SHA256: "e4e100c6cb5cb7087527602f9a618c60599da345834e497d66f41af18ce730f1"

ANSIBLE_DOWNLOAD_DIR: "/root/ansible_downloads/"
GPG_KEY_DIR: "/root/gpg_keys"

UWSGI_NUM_WORKERS: 4

SSL_CERTIFICATE_PUBLIC: "/etc/letsencrypt/live/{{ FULLY_QUALIFIED_DOMAIN_NAME }}/fullchain.pem"
SSL_CERTIFICATE_PRIVATE: "/etc/letsencrypt/live/{{ FULLY_QUALIFIED_DOMAIN_NAME }}/privkey.pem"
