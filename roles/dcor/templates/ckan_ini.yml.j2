# This is a template file. Any option defined via <TEMPLATE:TAGS> must be
# replaced with the corresponding value.

# These are general CKAN configuration options for DCOR from which
# individual package options are derived. To make site-specific
# changes, you can specify a `config_dcor.json` file when running
# `dcor inspect`, which overrides options in the present file.

# General CKAN tweaks
ckan.site_title: {{ CKAN_INI_SITE_TITLE }}
ckan.site_url: {{ 'https' if DCOR_HTTPS_ENABLED else 'http' }}://{{ FULLY_QUALIFIED_DOMAIN_NAME }}
ckan.storage_path: {{ CKAN_INI_STORAGE_PATH }}
# Do not publish which version we are running on
hide_version: true


# authorization
ckan.auth.anon_create_dataset: false
ckan.auth.create_unowned_dataset: false
ckan.auth.create_dataset_if_not_in_organization: false
ckan.auth.user_create_groups: true
ckan.auth.user_create_organizations: true
ckan.auth.user_delete_groups: false
ckan.auth.user_delete_organizations: false
ckan.auth.create_user_via_api: {{ CKAN_INI_AUTH_CREATE_USER_VIA_API }}
ckan.auth.create_user_via_web: {{ CKAN_INI_AUTH_CREATE_USER_VIA_WEB }}
ckan.auth.roles_that_cascade_to_sub_groups: admin
ckan.auth.public_user_details: false
ckan.auth.public_activity_stream_detail: false
ckan.auth.allow_dataset_collaborators: true
ckan.auth.allow_admin_collaborators: false
ckan.auth.allow_collaborators_to_change_owner_org: false
ckan.auth.create_default_api_keys: false
ckan.auth.reveal_private_datasets: false

# uploads
# only allow image types for user avatars and group images
ckan.upload.user.types: image
ckan.upload.group.types: image

# Add cache control headers, so nginx can cache public information
ckan.cache_enabled: true
ckan.cache_expires: 86400

# DCOR object storage via S3
dcor_object_store.access_key_id: {{ DCOR_S3_ACCESS_KEY_ID }}
dcor_object_store.secret_access_key: {{ DCOR_S3_SECRET_ACCESS_KEY }}
dcor_object_store.endpoint_url: {{ DCOR_S3_ENDPOINT_URL }}
dcor_object_store.ssl_verify: {{ DCOR_HTTPS_ENABLED }}
# The bucket name is by default defined by the circle ID. Resources
# are stored in the "RES/OUR/CEID-SCHEME" in that bucket. The part
# "{organization_id}" is a template used in DCOR [sic] and is not replaced here.
dcor_object_store.bucket_name: {{ DCOR_S3_BUCKET_NAME_STUB }}-{organization_id}

# postgresql
sqlalchemy.url: postgresql://{{ POSTGRESQL_CKAN_USER }}:{{ POSTGRESQL_CKAN_PASSWORD }}@{{ POSTGRESQL_CKAN_HOST }}/{{ POSTGRESQL_CKAN_DATABASE }}

# search
ckan.search.default_include_private: true

# general settings
# favicon is handled via dcor_control branding (public paths
# are added to the configuration)
ckan.favicon: /favicon.ico
ckan.gravatar_default: disabled
ckan.max_resource_size: 100000
# - The dc_serve plugin must come before the dc_view plugin, because the
#   dc_view plugin depends on the condensed dataset.
ckan.plugins: stats text_view image_view dcor_depot dcor_schemas dc_serve dc_view dc_log_view dcor_theme
ckan.views.default_views: image_view text_view dc_view dc_log_view
# don't put webassets in storage location
ckan.webassets.path: /var/lib/ckan/webassets
# solr by default listens to tcp6 (IPv6 not IPv4); workaround is to just
# use "localhost" instead of "127.0.0.1".
# Default for local installation is http://localhost:8983/solr/ckan
solr_url: {{ CKAN_INI_SOLR_URL }}

# Custom template paths that ansible populates
extra_template_paths: /var/www/ckan_templates

# ckanex-dcor_depot (used for caching e.g. figshare data)
ckanext.dcor_depot.tmp_dir: {{ CACHE_DIR }}/ckanext-dcor_depot

# ckanext-dc_serve
ckanext.dc_serve.create_condensed_datasets: true
ckanext.dc_serve.enable_intra_dataset_basins: true
ckanext.dc_serve.tmp_dir: {{ CACHE_DIR }}/ckanext-dc_serve

# ckanext-dcor_schemas
ckan.extra_resource_fields: etag sha256
ckanext.dcor_schemas.allow_content_listing_for_anon: {{ CKAN_INI_DCOR_SCHEMAS_ALLOW_CONTENT_LISTING_FOR_ANON }}
ckanext.dcor_schemas.allow_public_datasets: {{ CKAN_INI_DCOR_SCHEMAS_ALLOW_PUBLIC_DATASETS }}
ckanext.dcor_schemas.json_resource_schema_dir: {{ CKAN_INI_DCOR_SCHEMAS_JSON_RESOURCE_SCHEMA_DIRECTORY }}


# licenses path
licenses_group_url: file://{{ CKAN_INI_LICENSES_GROUP_URL }}


# CRSF protection
WTF_CSRF_ENABLED: true
WTF_CSRF_CHECK_DEFAULT: true
WTF_CSRF_SECRET_KEY: {{ CKAN_INI_WTF_CSRF_SECRET_KEY }}
# enforce CSRF protection for all extensions
ckan.csrf_protection.ignore_extensions: false


# general ckan session cookies
SESSION_TYPE: cookie
SESSION_COOKIE_NAME: dcor
SESSION_COOKIE_DOMAIN: {{ FULLY_QUALIFIED_DOMAIN_NAME }}
SESSION_COOKIE_HTTPONLY: true
SESSION_COOKIE_SECURE: {{ DCOR_HTTPS_ENABLED }}
SESSION_COOKIE_SAMESITE: Strict
# 90 days validity
PERMANENT_SESSION_LIFETIME: 7776000
SESSION_REFRESH_EACH_REQUEST: false


# Flask-Login Remember me cookie settings
REMEMBER_COOKIE_NAME: remember_token
# 90 days validity
REMEMBER_COOKIE_DURATION: 7776000
REMEMBER_COOKIE_DOMAIN: {{ FULLY_QUALIFIED_DOMAIN_NAME }}
REMEMBER_COOKIE_SECURE: true
REMEMBER_COOKIE_HTTPONLY: true
REMEMBER_COOKIE_SAMESITE: Strict


# Email settings
smtp.server: {{ EMAIL_SMTP_SERVER }}
smtp.starttls: {{ EMAIL_SMTP_STARTTLS }}
smtp.user: {{ EMAIL_SMTP_USER }}
smtp.password: {{ EMAIL_SMTP_PASSWORD }}
smtp.mail_from: {{ EMAIL_SMTP_MAIL_FROM }}
smtp.reply_to: {{ EMAIL_SMTP_REPLY_TO }}
email_to: {{ CKAN_INI_EMAIL_TO }}
error_email_from: {{ CKAN_INI_ERROR_EMAIL_FROM }}
